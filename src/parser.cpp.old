#include <stdio.h>
#include <iostream>
#include <vector>
#include <stack>
#include <string>
#include <algorithm>
#include "parserTokens.h"

using namespace std;

struct lexeme{
	int id;
	string text;
	int row;
	int column;
};

void parse(char *src) {
nsk sskjs sjonso s 
// find a solution for this array
const char* emit[100];
emit[1] = "imdoms";
emit[2] = "doms";
emit[3] = "imdomted";
emit[4] = "domted";
emit[5] = "siblproper";
emit[6] = "imlsibl";
emit[7] = "imrsibl";
emit[8] = "lsibl";
emit[9] = "rsibl";

emit[10] = "fstchildpar";
emit[11] = "lastchildpar";
emit[13] = "fstchild";
emit[14] = "lastchild";

emit[16] = "onlychildpar";
emit[17] = "onlychild";

emit[18] = "lmanc";
emit[19] = "rmanc";
emit[20] = "lmdesc";
emit[21] = "rmdesc";

emit[22] = "nthparent";
emit[23] = "nthchild";
emit[24] = "nthparent_end";
emit[25] = "nthchildL_end";

emit[26] = "imprec";
emit[27] = "imsucc";
emit[28] = "prec";
emit[29] = "succ";

emit[30] = "singdescpat";
emit[31] = "singascpath";

emit[32] = "EQ";
emit[33] = "HOMON";

emit[34] = "nimdoms";
emit[35] = "ndoms";
emit[36] = "nimdomted";
emit[37] = "ndomted";
emit[38] = "nsiblproper";
emit[39] = "nimlsibl";
emit[40] = "nimrsibl";
emit[41] = "nlsibl";
emit[42] = "nrsibl";

emit[43] = "nfstchildpar";
emit[44] = "nlastchildpar";
emit[46] = "nfstchild";
emit[47] = "nlastchild";

emit[49] = "nonlychildpar";
emit[50] = "nonlychild";

emit[51] = "nlmanc";
emit[52] = "nrmanc";
emit[53] = "nlmdesc";
emit[54] = "nrmdesc";

emit[55] = "nnthparent";
emit[56] = "nnthchild";
emit[57] = "nnthparent_end";
emit[58] = "nnthchildL_end";

emit[59] = "nimprec";
emit[60] = "nimsucc";
emit[61] = "nprec";
emit[62] = "nsucc";

emit[63] = "nsingdescpat";
emit[64] = "nsingascpath";

emit[67] = "nodename";
emit[69] = "label";
emit[70] = "terminal_and";
emit[71] = "terminal_or";
emit[72] = "terminal_not";

emit[73] = "startprimplaceholder";
emit[74] = "endprimplaceholder";
emit[75] = "startsecplaceholder";
emit[76] = "endsecplaceholder";


	int lookahead;

	/*
	FILE *file = fopen(src, "r");

	if (!file) {
		fprintf(stderr,"could not open %s\n",src);
		exit(1);
	}
	*/

	printf("oi");

	yyin=src;

	vector<lexeme> lex;
	lexeme lex_aux;

	while(true)
	{
		lookahead=yylex();

		lex_aux.id=lookahead;
		lex_aux.text=string(yytext);
		lex_aux.column=nchar-yyleng;
		lex_aux.row=nline;

		lex.push_back(lex_aux);

		if(lookahead==EOF) break;
	}

	for(auto x : lex)
	{
		if(x.column==0) cout<<endl;
		cout<<emit[x.id]<<" ";
	}


}
